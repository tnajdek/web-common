@use "abstracts/defaults";
@use "abstracts/mixins/breakpoints";
@use "abstracts/mixins/selectors";
@use "abstracts/mixins/utilities";

.dropdown {
	position: relative;

	.dropdown-toggle {
		&.btn-icon {
			vertical-align: top;
		}

		[class*="icon-chevron"] {
			transform: scaleY(-1);
			vertical-align: -2px; // Works for btn-lg
		}

		@include selectors.state(".dropdown.show") {
			&.btn-link,
			&.btn-icon {
				@include breakpoints.mouse-and-bp-up(md) {
					color: defaults.$icon-active-color;

					.icon {
						color: defaults.$icon-active-color;
					}
				}
			}
		}
	}

	.dropdown-menu {
		background-color: defaults.$menu-bg;
		box-shadow: defaults.$menu-box-shadow;
		border-radius: defaults.$menu-border-radius;
		z-index: defaults.$z-index-menu;
		margin: defaults.$space-min 0;
		display: none;
		will-change: transform;
		transform: translate3d(0, 0, 0);
		top: 0;
		left: 0; // required for correct popper js rendering

		&:focus {
			outline: none;
		}

		@include breakpoints.touch-or-bp-down(sm) {
			padding: defaults.$space-xs 0;
		}

		@include breakpoints.mouse-and-bp-up(md) {
			padding: defaults.$space-min 0;
		}

		@include selectors.state(".dropdown.show") {
			display: block;
		}
	}

	.dropdown-item {
		display: block;
		width: 100%;
		border: none;
		text-align: left;
		background-color: transparent;
		margin: 0;
		white-space: nowrap; // Prevent line break due to positioned dropdown-wrapper
		color: defaults.$menu-color;
		cursor: pointer;

		@include breakpoints.touch-or-bp-down(sm) {
			line-height: defaults.$line-height-base-mobile; // Prevent inheritance
			padding: defaults.$dropdown-item-padding-y-touch defaults.$dropdown-item-padding-x-touch;
		}

		@include breakpoints.mouse-and-bp-up(md) {
			line-height: defaults.$line-height-base; // Prevent inheritance
			padding: (defaults.$input-btn-padding-y + defaults.$input-border-width) defaults.$input-btn-padding-x;
		}

		&.disabled {
			color: defaults.$menu-color-disabled;

			&:hover,
			&:focus {
				background-color: transparent;
			}
		}

		&:focus {
			outline: none;
		}

		&:hover,
		&.active {
			background-color: defaults.$menu-item-hover-bg;
		}

		@include selectors.state(".keyboard .dropdown") {
			&:focus {
				background-color: defaults.$menu-item-hover-bg;
			}
		}

		&.selected {
			background-color: defaults.$menu-item-selected-bg;

			&:hover,
			&:focus,
			&.active {
				background-color: defaults.$menu-item-selected-hover-bg;
			}
		}

		.icon {
			vertical-align: top;

			@include breakpoints.touch-or-bp-down(sm) {
				margin-right: defaults.$space-xs;
			}
		}
	}

	.dropdown-divider {
		border-top: defaults.$input-border-width solid defaults.$menu-devider;

		@include breakpoints.touch-or-bp-down(sm) {
			margin: defaults.$space-xs 0;
		}

		@include breakpoints.mouse-and-bp-up(md) {
			margin: defaults.$space-min 0;
		}
	}
}
